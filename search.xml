<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Flexbox布局总结]]></title>
      <url>%2F2017%2F04%2F07%2Fcss-flex%2F</url>
      <content type="text"><![CDATA[Web页面布局的发展经历了表格布局-&gt;定位布局-&gt;浮动布局-&gt;Flexbox布局的演变，每种布局都反映了当时的对布局需要。本文主要对CSS3中的Flexbox的原理、语法和使用进行探讨。 介绍采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。 容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。 注意: float、clear和vertical-align属性将会失效。 容器属性flex-directionflex-direction该属性通过定义flex容器的主轴方向来决定felx子项在flex容器中的位置，默认值row1234.flex-container &#123; -webkit-flex-direction: row | column | row-reverse | column-reverse | initial | inherit; /* Safari */ flex-direction: row | column | row-reverse | column-reverse | initial | inherit;&#125; 值 描述 row 默认值，主轴与行内轴方向作为默认的书写模式。即横向从左到右排列（左对齐） column 对齐方式与row相反 row-reverse 主轴与块轴方向作为默认的书写模式。即纵向从上往下排列（顶对齐）。 column-reverse 对齐方式与column相反。 运行结果 flex-wrap默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，如果一条轴线排不下，如何换行，默认值nowrap。 1234.flex-container &#123; -webkit-flex-wrap: nowrap | wrap | wrap-reverse; /* Safari */ flex-wrap: nowrap | wrap | wrap-reverse;&#125; 注意: 在Android4.4一下版本及较老版本的浏览器对于该属性不支持。 flex-flowflex-flow这个属性是flex-direction和flex-wrap属性的简写，默认值row nowrap。 1234.flex-container &#123; -webkit-flex-flow: &lt;flex-direction&gt; || &lt;flex-wrap&gt;; /* Safari */ flex-flow: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;&#125; justify-contentjustify-content属性用来指定flex项目在flex容器沿着主轴在当前行的对齐方式，默认值flex-start。 1234.flex-container &#123; -webkit-justify-content: flex-start | flex-end | center | space-between | space-around; /* Safari */ justify-content: flex-start | flex-end | center | space-between | space-around;&#125; 值 描述 flex-start 默认值，左对齐 flex-end 右对齐 center 居中对齐 space-between 两端对齐 space-around 每两个项目间的间距一样，项目间的间距是项目和容器间距的2倍 align-items1234.flex-container &#123; -webkit-align-items: flex-start | flex-end | center | baseline | stretch; /* Safari */ align-items: flex-start | flex-end | center | baseline | stretch;&#125; 值 描述 flex-start 左对齐 flex-end 右对齐 center 居中对齐 baseline stretch 默认值，每两个项目间的间距一样 align-contentalign-content属性将flex容器内的行在flex容器中侧轴排列方式，类似于justify-content在主轴方向的单个Flex项目对齐方式。Flex项目在flex容器中多行显示行，其多行在flex容器的侧轴方向对齐方式。注意: 单轴线的情况下该属性不起作用 1234.flex-container &#123; -webkit-align-content: flex-start | flex-end | center | space-between | space-around | stretch; /* Safari */ align-content: flex-start | flex-end | center | space-between | space-around | stretch;&#125; 项目属性orderorder定义项目的排列顺序，数值越小，越靠前，默认值为0。注意: 值可以为负数 1234.flex-item &#123; -webkit-order: &lt;integer&gt;; /* Safari */ order: &lt;integer&gt;;&#125; flex-growflex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。注意: 负数是非法的 1234.flex-item &#123; -webkit-flex-grow: &lt;number&gt;; /* Safari */ flex-grow: &lt;number&gt;;&#125; 如果所有项目的flex-grow值相同，则他们等分剩余的空间。如果项目的flex-grow不同，则按比例分剩余的空间，比如一个项目的flex-grow的值为2，其他的为1，则前者分得的空间是其他项目的2倍。注意: 这个值是指剩余空间的分配比例，如果没有剩余空间的情况下，该属性没有效果。 flex-shrinkflex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。注意: 负数是非法的 1234flex-item &#123; -webkit-flex-shrink: &lt;number&gt;; /* Safari */ flex-shrink: &lt;number&gt;;&#125; 当flex-shrink为0时，保持项目的原有尺寸不变。 flex-basisflex-basis属性和width和height属性相同，用来指定flex项目的大小，默认值auto。 1234.flex-item &#123; -webkit-flex-basis: auto | &lt;width&gt;; /* Safari */ flex-basis: auto | &lt;width&gt;;&#125; flexflex是一个复合属性，包括flex-grow、flex-shrink和flex-basis，默认值为0 1 auto 1234.flex-item &#123; -webkit-flex: none | auto | [ &lt;flex-grow&gt; &lt;flex-shrink&gt;? || &lt;flex-basis&gt; ]; /* Safari */ flex: none | auto | [ &lt;flex-grow&gt; &lt;flex-shrink&gt;? || &lt;flex-basis&gt; ];&#125; align-selfalign-self可以项目在单独设置交叉轴的对齐属性。默认值为auto，表示与父元素的align-items的值一直，如果父元素没有设置align-items，则等于stretch。其他值的含义和容器的align-items一致。 1234.flex-item &#123; -webkit-align-self: auto | flex-start | flex-end | center | baseline | stretch; /* Safari */ align-self: auto | flex-start | flex-end | center | baseline | stretch;&#125; 兼容性Flexbox布局有三个版本： old : 最老版本(2009)，display: box tweener : 过渡版本(2011)，display: flexbox new : 最新版本，display: flex 浏览器 支持情况 Chrome 20- (old) 21+ (new) Safari 3.1+ (old) 6.1+ (new) Firefox 2-21 (old) 22+ (new) Opera 12.1+ (new) IE 10 (tweener) 11+ (new) Android 2.1+ (old) 4.4+ (new) iOS 3.2+ (old) 7.1+ (new) 在css书写时要注意兼容不同浏览器及版本的差异，如下：12345678.flex-container &#123; display: -webkit-box; /* Chrome 4+, Safari 3.1, iOS Safari 3.2+ */ display: -moz-box; /* Firefox 17- */ display: -webkit-flex; /* Chrome 21+, Safari 6.1+, iOS Safari 7+, Opera 15/16 */ display: -moz-flex; /* Firefox 18+ */ display: -ms-flexbox; /* IE 10 */ display: flex; /* Chrome 29+, Firefox 22+, IE 11+, Opera 12.1/17/18, Android 4.4+ */&#125; 可以采用Autoprefixer书写最新的flex样式，会自动补齐兼容部分，如下Sass代码1234567891011121314151617181920212223242526272829303132@mixin flexbox() &#123; display: -webkit-box; display: -moz-box; display: -ms-flexbox; display: -webkit-flex; display: flex;&#125;@mixin flex($values) &#123; -webkit-box-flex: $values; -moz-box-flex: $values; -webkit-flex: $values; -ms-flex: $values; flex: $values;&#125;@mixin order($val) &#123; -webkit-box-ordinal-group: $val; -moz-box-ordinal-group: $val; -ms-flex-order: $val; -webkit-order: $val; order: $val;&#125;.flex-container &#123; @include flexbox();&#125;.flex-item &#123; @include flex(1 200px); @include order(2);&#125; 参考 W3C css flexbox Flex 布局教程：语法篇 Flex 布局教程：实例篇 A Visual Guide to CSS3 Flexbox Properties A Complete Guide to Flexbox 学习布局 mdn - Web technology for developers - css - display Understanding CSS3 Flexbox for Responsive Design 图解CSS3 Flexbox属性 移动端开发小记 - Flexbox 浅谈CSS3中display属性的Flex布局 CSS3 display:flex和display:box有什么区别？ css参考手册 - display Flex布局新旧混合写法详解（兼容微信）]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[2017年书单]]></title>
      <url>%2F2017%2F04%2F01%2Fbook-list-2017%2F</url>
      <content type="text"><![CDATA[列个书单，梳理一下2017年已经在读的书和打算读的书，等年底看看效果，也是对自己的一个督促。书单会不定期更新状态和进行补充完善。持续更新中…… 已读斯坦福极简经济学作者: 蒂莫西·泰勒豆瓣 内容介绍斯坦福大学最受欢迎的经济课！ 从36个经济学关键名词入手，每篇约3000字，用生活实例引入主要原理，解释、分析经济现象，概念清晰，没有经济基础，也能轻松理解。简约不简单，帮助我们认识复杂的世界，在经济社会中，成为一个更聪明、更成熟的参与者。 重来作者: 贾森·弗里德 / 戴维·海涅迈尔·汉森豆瓣 定位作者: 阿尔·里斯 / 杰克·特劳特豆瓣 养育男孩作者: 史蒂夫·比达尔夫豆瓣 12-18岁叛逆期妈妈要懂的心理学作者: 岳贤伦豆瓣 重新定义公司：谷歌是如何运营的作者: 埃里克·施密特豆瓣 在读丝绸之路：一部全新的世界史作者: [英] 彼得·弗兰科潘豆瓣 刻意练习：如何从新手到大师作者: [美] 安德斯·艾利克森 / 罗伯特·普尔豆瓣 未读人类简史作者: 尤瓦尔·赫拉利豆瓣 内容介绍十万年前，地球上至少有六种不同的人但今日，世界舞台为什么只剩下了我们自己？从只能啃食虎狼吃剩的残骨的猿人，到跃居食物链顶端的智人，从雪维洞穴壁上的原始人手印，到阿姆斯壮踩上月球的脚印，从认知革命、农业革命，到科学革命、生物科技革命，我们如何登上世界舞台成为万物之灵的？从公元前1776年的《汉摩拉比法典》，到1776年的美国独立宣言，从帝国主义、资本主义，到自由主义、消费主义，从兽欲，到物欲，从兽性、人性，到神性，我们了解自己吗？我们过得更快乐吗？我们究竟希望自己得到什么、变成什么？ 你的团队需要一个会讲故事的人作者: 安妮特·西蒙斯豆瓣 社交网站界面设计作者: Christian Crumlish / Erin Malone豆瓣 未来简史作者: 尤瓦尔·赫拉利豆瓣 技术类 互联网思维: 工作、生活、商业的大革命 About Face Python相关书籍 SensorFlow和深度学习相关书籍 传记类 特斯拉之父: 埃隆·马斯克传 万达哲学: 王健林首次自述经营之道 社科类/文史类 时间简史 你一定爱读的极简欧洲史 巨婴国 教育类 好妈妈胜过好老师2: 自由的孩子最自觉 快乐数学一本搞定 如何说孩子才会听，怎样听孩子才肯说 财经类 一本书读懂财报 参考 豆瓣奇点系列 樊豋读书会书单]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Vue开发环境搭建]]></title>
      <url>%2F2017%2F03%2F29%2Fhello-vue%2F</url>
      <content type="text"><![CDATA[记录一下在mac环境下搭建Vue开发环境的一些步骤、问题和资料。 安装nodejs/npm参考网上资料 npmjs官网https://docs.npmjs.com/cli/install npm换源http://www.jianshu.com/p/0deb70e6f3951npm install express --registry=https://registry.npm.taobao.org 淘宝npm源http://npm.taobao.org1npm install -g cnpm --registry=https://registry.npm.taobao.org 安装vue1npm install vue -g 安装vue-cli1npm install vue-cli -g 项目初始化项目1vue init webpack project-name 安装编译/运行123cd project-namenpm installnpm run dev 其他准备工作sublime插件安装javascriptNext ES6语法高亮Vuejs Snippets vue语法提示Vue highlight vue语法高亮HTML/CSS/JS Prettify 这个插件就行， 安装后 tools-&gt;HTML/CSS/JS Prettify-&gt;set prettify preference 在”allowed_file_extensions”: [“htm”, “html”, “xhtml”, “shtml”, “xml”, “svg”,”vue”] 饿了么组件项目模板https://github.com/ElementUI/element-starter 参考资料 Vue.js 快速入门 https://segmentfault.com/a/1190000003968020 vuejs环境配置 http://www.jianshu.com/p/a8701d724e70 vue awesome https://github.com/vuejs/awesome-vue#interactive-experiences 饿了么vue手机端ui框架mint-ui http://mint-ui.github.io/docs 饿了么vue组件库 http://element.eleme.io/#/zh-CN http://www.tuicool.com/articles/vyUzuiy]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[我的Github博客开张了]]></title>
      <url>%2F2017%2F03%2F27%2Ffirst%2F</url>
      <content type="text"><![CDATA[之前一直用Evernote和Quiver作为本地笔记工具，最早使用Evernote，后来由于Evernote越来越重，目前主要结合Safari的Evernot插件收藏一些文章。现在使用Quiver，内容基本都是markdown格式。近期有想法把一些新的同步放到网上和大家分享，选择了Github Pages，对于blog框架有连个选择Jeyll和Hexo，对比尝试后选择Github+Hexo作为博客框架。 什么是HexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 hexo安装配置安装1cnpm install hexo-cli -g 初始化1hexo init blog blog为博客目录名 生产静态页面12cd bloghexo generate 运行本地服务123cd blognpm installhexo server 访问 http://localhost:4000/ 安装hexo git插件1cnpm install hexo-deployer-git --save 运行如下命令部署1hexo deploy -g 安装主题NexThttps://github.com/iissnan/hexo-theme-next1git clone https://github.com/iissnan/hexo-theme-next themes/next 注意：修改配置文件_config.yml中语言为zh-Hans，默认为zh-CN 1language: zh-Hans maupassant123git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassantcnpm install hexo-renderer-jade --savecnpm install hexo-renderer-sass --save about页方法一：通过hexo new page命令12cd bloghexo new page about 方法二：在source文件夹下新建about文件夹，在about文件夹下新建index.md tags页执行如下命令创建标签页1hexo new page tags 编辑tags/index.md内容123456---title: tagsdate: 2017-03-28 10:58:20type: "tags"comments: false--- categories页执行如下命令创建标签页1hexo new page categories 编辑categories/index.md内容123456---title: categoriesdate: 2017-03-28 10:58:20type: "categories"comments: false--- rss订阅hexo插件hexo-generateor-feed1cnpm install hexo-generator-feed --save *.md文件写法文件开始部分采用yaml格式配置文章属性123456789101112---# 文章标题title: 文章标题 # 文章日期，通过hexo new创建的会填充创建时间date: 2017-03-27 18:04:58# 文章分类categories: 环境搭建# 文章标签tags: [github,hexo]# 是否允许评论，比如about、tags等页面需要设置为falsecomments: false--- 文章正文采用markdown格式书写 分类categories12345categories: 分类categories: - 一级分类 - 二级分类 标签tags1234tags: [标签1,标签2]tags: - 标签1 - 标签2 本地图片将网站配置文件_config.yml中post_asset_folder的值改为true，当用hexo new title命令创建新的文章时，会创建同名目录，可以将资源文件（图片文件）放到该目录下 1post_asset_folder:true 安装hexo-asset-image插件 1cnpm install https://github.com/CodeFalling/hexo-asset-image --save 在md文档中用![图片说明](title/avatar.jpg)方式插入图片1![图片测试](first/hexo.jpeg) 如果不安装hexo-asset-image插件，可使用如下代码（非markdown方式）1&#123;% asset_img slug [title] %&#125; 优化加强添加打赏在主题配置文件中，添加如下内容：1234# 打赏reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！wechatpay: /upload/wechatpay.jpegalipay: /upload/alipay.jpeg reward_comment为打赏提示语，可改为自己的wechatpay和alipay为微信收款和支付宝收款的二维码图片，可以是网络图片，也可以是本地图片。本地图片放到source\upload目录下 添加阅读数用不蒜子进行统计，在主题配置文件中将enable改为true，然后在首页底部和文章头部就可以看到访问量了123busuanzi_count: # count values only if the other configs are false enable: true 添加MTA访问统计访问腾讯MTA，登录，创建新应用，选择h5，输入你的博客地址heneryyang.github.io，将mta id写到主题配置文件中12# Tencent MTA IDtencent_mta: mta id 由于NexT第三方服务腾讯MTA的url地址是http的，会导致在一些浏览器上有安全问题，将themes/next/layout/_third-party/analytics/tencent-mta.swig文件中的http改为https1mta.src = &quot;https://pingjs.qq.com/h5/stats.js?v2.0.2&quot;; 分享采用百度分享，修改主题配置文件123456# Baidu Share# Available value:# button | slide# Warning: Baidu Share does not support https.baidushare: type: button 其中button为按钮格式，slide为侧边栏展开方式 由于百度分享不支持https，在https://github.com/hrwhisper/baiduShare下载代码，将static目录放置在source下，然后修改themes/next/layout/_partials/share/baidushare.swig文件中//bdimg.share.baidu.com/static改为/static123&lt;script&gt; with(document)0[(getElementsByTagName(&apos;head&apos;)[0]||body).appendChild(createElement(&apos;script&apos;)).src=&apos;/static/api/js/share.js?cdnversion=&apos;+~(-new Date()/36e5)];&lt;/script&gt; 注意：需要再网站配置文件中添加如下内容，禁止hexo编译static文件夹12skip_render: – static/** sitemap12cnpm install hexo-generator-sitemap --savecnpm install hexo-generator-baidu-sitemap --save 在网站配置文件中加入1234sitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml 搜索添加站点内容搜索安装 hexo-generator-searchdb1cnpm install hexo-generator-searchdb --save 修改站点配置文件，添加如下内容12345search: path: search.xml field: post format: html limit: 10000 编辑主题配置文件，开启本地搜索功能123# Local searchlocal_search: enable: true jsfiddle标签由于jsfiddle标签生成的地址为http，请求会被会被浏览器拦截，需要访问jsfiddle对应https地址修改next主题目录下layout/_partials/head.swig文件，在其中添加&lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;upgrade-insecure-requests&quot;&gt; 1234&lt;meta charset="UTF-8"/&gt;&lt;meta http-equiv="X-UA-Compatible" content="IE=edge" /&gt;&lt;meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/&gt;&lt;meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests"&gt; 问题: 当在本地通过hexo s启动服务，访问http://localhost:4000时，页面资源都访问https下对应内容，导致页面显示错误。找到jsfiddle.js，将其中的http改为https 1return '&lt;iframe scrolling="no" width="' + width + '" height="' + height + '" src="https://jsfiddle.net/' + id + '/embedded/' + tabs + '/' + skin + '" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;'; 参考 hexo官网 NexT主题官网 零基础免费搭建个人博客-hexo+github hexo入门指南 Hexo博客主题推荐 大道至简——Hexo简洁主题推荐 YAML 语言教程 百度分享不支持https的解决方案]]></content>
    </entry>

    
  
  
</search>
